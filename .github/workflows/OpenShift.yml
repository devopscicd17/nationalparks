name: OpenShift Deployment and Prisma Scan

on:
  push: 
    branches: [ master ]

jobs:
  build-and-deploy:
    name: Build, Push, Deploy to OpenShift, and Scan
    runs-on: ubuntu-22.04
    environment: development

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Build with Maven
      run: mvn clean package  # Or use ./gradlew build for Gradle

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Build and Push Docker Image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        tags: |
          ghcr.io/${{ github.repository_owner }}/nationalparks:latest
          ghcr.io/${{ github.repository_owner }}/nationalparks:${{ github.sha }}
        push: true

    - name: Deploy to OpenShift
      run: |
        bash "${GITHUB_WORKSPACE}/.github/script.sh" \
          ${{ env.APP_NAME }} \
          ${{ env.IMAGE_REGISTRY }}/${{ steps.build_image.outputs.image }}:${{ github.sha }} \
          ${{ env.OPENSHIFT_NAMESPACE }}

    # Run Prisma Cloud Scan
    - name: Scan image
      uses: PaloAltoNetworks/prisma-cloud-scan@v1
      with:
        pcc_console_url: ${{ env.pcc_console_url }}
        pcc_user: ${{ env.pcc_user }}
        pcc_pass: ${{ env.pcc_pass }}
        image_name: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
