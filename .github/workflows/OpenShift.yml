name: OpenShift Deployment and Prisma Scan

env: 
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  APP_NAME: nationalparks
  IMAGE_TAGS: latest,${{ github.sha }}
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  OPENSHIFT_NAMESPACE: "manoj-singh8-dev"
  PCC_CONSOLE_URL: ${{ secrets.PCC_CONSOLE_URL }}
  PCC_USER: ${{ secrets.PCC_USER }}
  PCC_PASS: ${{ secrets.PCC_PASS }}
  APP_PORT: "8080"

on:
  push: 
    branches: [ master ]

jobs:
  build-and-deploy:
    name: Build, Push, Deploy to OpenShift, and Scan
    runs-on: ubuntu-22.04
    environment: development

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.IMAGE_REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: Build and Push Docker Image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        tags: |
          ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:latest
          ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:${{ github.sha }}
        push: true

    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
        openshift_token: ${{ env.OPENSHIFT_TOKEN }}
        insecure_skip_tls_verify: true
        namespace: ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Deploy to OpenShift
      run: |
        oc new-app --docker-image=${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:latest \
          --name=${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }} || true
        oc rollout latest dc/${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }}
        oc expose svc/${{ env.APP_NAME }} --port=${{ env.APP_PORT }} -n ${{ env.OPENSHIFT_NAMESPACE }}

    - name: Get OpenShift Route URL
      id: get-route
      run: |
        export ROUTE_URL=$(oc get route ${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }} -o jsonpath='{.spec.host}')
        echo "ROUTE_URL=${ROUTE_URL}" >> $GITHUB_ENV

    - name: Print Route URL
      run: echo "Application Route URL:https://${{ env.ROUTE_URL }}"

    - name: Prisma Cloud Scan
      uses: PaloAltoNetworks/prisma-cloud-scan@v1
      with:
        pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
        pcc_user: ${{ secrets.PCC_USER }}
        pcc_pass: ${{ secrets.PCC_PASS }}
        image_name: ${{ env.IMAGE_REGISTRY }}/${{ env.APP_NAME }}:latest
